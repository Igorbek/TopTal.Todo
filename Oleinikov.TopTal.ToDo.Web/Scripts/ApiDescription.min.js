var ToDo;(function(n){(function(n){(function(n){var i;(function(n){n[n.String=0]="String",n[n.Number=1]="Number",n[n.Date=2]="Date",n[n.Enum=3]="Enum",n[n.Object=4]="Object",n[n.Array=5]="Array"})(n.TypeKind||(n.TypeKind={})),i=n.TypeKind,function(n){n[n.GET=0]="GET",n[n.POST=1]="POST",n[n.PUT=2]="PUT",n[n.DELETE=3]="DELETE"}(n.HttpMethod||(n.HttpMethod={}));var r=n.HttpMethod,t={Kind:i.String},e={Kind:i.Number},f={Kind:i.Object,Fields:[{Name:"Name",Description:"Name of the user",Type:t},{Name:"CreatedOn",Description:"Date/Time in UTC in ISO format when user was created.",Type:t},{Name:"UpdatedOn",Description:"Date/Time in UTC in ISO format when user was updated.",Type:t}]},o={Kind:i.Object,Fields:[{Name:"AuthToken",Description:"Token to use with other requests to provide current authentication session.",Type:t},{Name:"AutoLoginToken",Description:"Token to use with autologin. This token can be safety saved on client.",Type:t},{Name:"User",Description:"Information of the user.",Type:f}]},u={Kind:i.Object,Fields:[{Name:"Title",Type:t,Required:!0},{Name:"Description",Type:t},{Name:"CompleteDue",Type:t},{Name:"Priority",Type:{Kind:i.Enum,Values:["None","Low","Medium","High"]}},{Name:"State",Type:{Kind:i.Enum,Values:["New","InProgress","Completed"]}},{Name:"CreatedOn",Type:t},{Name:"UpdatedOn",Type:t}]};n.Description={BaseUrl:"/api/",Modules:[{Name:"Account",Description:"Actions with account",Actions:[{Name:"Register",Description:"Register new user",RequireAuthToken:!1,Method:r.POST,Url:"account",Data:{Kind:i.Object,Fields:[{Name:"Name",Description:"Name of the new user. Length must be from 1 to 60 character long and contains only letters.",Type:t,Required:!0},{Name:"Password",Description:"Password of the new user. Must be at least 6 character long.",Type:t,Required:!0}]},ReturnData:o},{Name:"Login",Description:"Login user with name and password.",RequireAuthToken:!1,Method:r.POST,Url:"login",Data:{Kind:i.Object,Fields:[{Name:"Name",Description:"Name of the user to login. Can be passed '_autologin'.",Type:t,Required:!0},{Name:"Password",Description:"Password of the user to login. Can be passed autologin token, if Name set to '_autologin'.",Type:t,Required:!0}]},ReturnData:o},{Name:"Get information",Description:"Return information on current user.",RequireAuthToken:!0,Method:r.GET,Url:"account",ReturnData:f},{Name:"Update",Description:"Update user information",RequireAuthToken:!0,Method:r.PUT,Url:"account",Data:{Kind:i.Object,Fields:[{Name:"Name",Description:"Name of the user to update.",Type:t,Required:!0},{Name:"Password",Description:"New password of the user. Must be at least 6 character long.",Type:t,Required:!0}]},ReturnData:f}]},{Name:"Items",Description:"Task items manipulations",Actions:[{Name:"List",Url:"items",RequireAuthToken:!0,Method:r.GET,UrlParameters:[{Name:"count",Description:"Number of items to return.",Type:e},{Name:"from",Description:"Number of items to skip.",Type:e},{Name:"orderBy",Description:"Parameter to order by.",Type:{Kind:i.Enum,Values:["Priority","CompleteDue","CreatedOn","UpdatedOn"]}},{Name:"orderDir",Description:"Direction of the ordering.",Type:{Kind:i.Enum,Values:["asc","desc"]}}],ReturnData:{Kind:i.Array,ElementType:u}},{Name:"Create",Description:"Create new task item.",Url:"items",RequireAuthToken:!0,Method:r.POST,Data:u,ReturnData:u},{Name:"Update",Description:"Update existing task item.",Url:"items",RequireAuthToken:!0,Method:r.PUT,UrlAppendParameters:[{Prefix:"/",Name:"id",Description:"Identifier of the task item to update.",Type:t,Required:!0}],Data:u,ReturnData:u},{Name:"Delete",Description:"Delete existing task item.",Url:"items",RequireAuthToken:!0,UrlAppendParameters:[{Prefix:"/",Name:"id",Description:"Identifier of the task item to delete.",Type:t,Required:!0}],Method:r.DELETE}]}]}})(n.Description||(n.Description={}));var t=n.Description})(n.Api||(n.Api={}));var t=n.Api})(ToDo||(ToDo={}))